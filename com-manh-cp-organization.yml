#
# !!! GENERATED FILE - DO NOT MODIFY !!!
#
# Deployment YML for com-manh-cp-organization
#
# Generated by Sidekick
#
# Spec Name:         com-manh-cp-organization
# App Name:          com-manh-cp-organization
# Component:
# > Name:            com-manh-cp-organization
# > Short Name:      organization
# > Stereotype:      REST
# Docker Image:
# > Registry:        quay.io/manhrd
# > Image:           com-manh-cp-organization:3.355.0-53f78ee-2001091323
# Namespace:         default
# Code Drop ID:      latest
# Resources:
# > CPU Request:     991m
# > Memory Request:  6144Mi
# > Memory Limit:    15360Mi
# Java Xmx:          4096m
# Replicas:          1
#
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: com-manh-cp-organization
  namespace: default
  annotations:
    # true and unaltered name of the service
    cp.manh.com/canonical-name: com-manh-cp-organization
    # full name of the component, such as 'com-manh-cp-inventory'
    cp.manh.com/component-name: com-manh-cp-organization
    # short name of the component, such as 'inventory'
    cp.manh.com/component-short-name: organization
    # name of the Docker registry
    cp.manh.com/image-registry: quay.io/manhrd
    # full name of the component's Docker image
    cp.manh.com/component-image-name: com-manh-cp-organization
    # component's Docker image tag
    cp.manh.com/component-tag: 3.355.0-53f78ee-2001091323
    # the active current code drop ID
    cp.manh.com/code-drop-id: latest
    # lifecycle realm of this spec; either 'dynamic' or 'standard'
    cp.manh.com/spec-realm: standard
    # stereotype of the component such as REST
    cp.manh.com/component-stereotype: REST
    # qualifier of the component (for consistency with template_deployment.yml)
    cp.manh.com/component-qualifier: ""
    # base64 enocoded empty JSON (for consistency with template_deployment.yml)
    cp.manh.com/encoded-attributes: e30=
    # spec version (in YYYY-MM.increment format); updated when this spec is updated
    cp.manh.com/deployment-spec-version: "2019-12.0.0072a7d"
spec:
  # scale com-manh-cp-organization to 1 instances
  replicas: 1
  # rolling update strategy with...
  #   max 25% surge (create 25% new pods at a time)
  #   max 0% unavailable (don't bring anything down until the updated pod is brought up first)
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0%
  # bind this deployment with its pods via the pod's 'deployment' label
  selector:
    matchLabels:
      deployment: com-manh-cp-organization
  template:
    metadata:
      labels:
        app: com-manh-cp-organization
        stereotype: REST
        enableRollingRestart: "true"
        deployment: com-manh-cp-organization
        specRelm: standard
        macpComponent: "true"
        macpComponentName: com-manh-cp-organization
    spec:
      affinity:
        # standard deployments have an affinity with 'standard' node pool
        # node pool affinity is declared as 'required'
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: node-pool-type
                  operator: In
                  values:
                    - standard
        # do not place another pod of the same 'app' on a single node
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - com-manh-cp-organization
              topologyKey: "kubernetes.io/hostname"
      # scheduling and preemption priority of this pod
      priorityClassName: high-priority
      initContainers:
      - name: install
        image: ubuntu:xenial
        command: ["/bin/sh","-c"]
        args: ["apt update; apt install -y wget tar; wget -O /work-dir/dd-java-agent.jar 'https://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.datadoghq&a=dd-java-agent&v=LATEST' "]
        volumeMounts:
        - mountPath: /work-dir
          name: workdir
      containers:
      - name: com-manh-cp-organization
        image: quay.io/manhrd/com-manh-cp-organization:3.355.0-53f78ee-2001091323
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "991m"
            memory: "6144Mi"
          limits:
            memory: "15360Mi"
        # perform the readinessProbe at /info
        readinessProbe:
          httpGet:
            path: /info
            port: 8080
          # start after 60s of container launch
          initialDelaySeconds: 60
          # probe every 30s
          periodSeconds: 30
          # declare success (ready) if 1 (default) attempt results in a success
          successThreshold: 1
          # declare failure (not ready) if 3 consecutive probes result in a failure.
          failureThreshold: 3
        # perform the readinessProbe at /info
        livenessProbe:
          httpGet:
            path: /info
            port: 8080
          # start after 45 minutes of container launch
          initialDelaySeconds: 2700
          # probe every 15s
          periodSeconds: 15
          # declare success (live) if 1 (default) attempt results in a success
          successThreshold: 1
          # declare failure (not live) if 3 consecutive probes result in a failure
          failureThreshold: 3
        ports:
        - containerPort: 8080
        envFrom:
        # get environment from cp-env configmap; see kube-core-env/cp-env
        - configMapRef:
            name: cp-env
        # Google Cloud Platform authorization properties
        - configMapRef:
            name: gcp-project-env
        # get secrets from cp-secret-env secrets; see kube-core-env/cp-secret-env
        - secretRef:
            name: cp-secret-env
        # get DB environment from *db-env configmap
        - configMapRef:
            name: com-manh-cp-organization-db-env
        # get component environment from *-env configmap
        - configMapRef:
            name: com-manh-cp-organization-env
        # component specific environment variables
        env:
        # IP address of the host running this container; a.k.a "node IP"
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP      
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        # VIRTUAL_HOST is set as the service name
        - name: VIRTUAL_HOST
          value: "com-manh-cp-organization.default.svc.cluster.local"
        # VIRTUAL_PORT is always set as the containerPort
        - name: VIRTUAL_PORT
          value: "8080"
        # JVM and Spring properties
        - name: JAVA_OPTS
          value: "-javaagent:/component/workdir/dd-java-agent.jar -Ddd.trace.analytics.enabled=true -Ddd.service.name=Organization -Xmx4096m -Xss512k -Dlogging.level.com.manh.cp=INFO -Dlogging.level.com.netflix=WARN -XX:+UseG1GC -XX:+DisableExplicitGC -XX:+UseStringDeduplication"
        # Behavioral properties
        - name: COMPONENT_STEREOTYPE
          value: "REST"
        - name: DB_UPGRADE_DDL_EXECUTE
          value: "true"
        # mount the Google Cloud Platform authorization key data
        volumeMounts:
        - name: "gcp-service-admin-account"
          mountPath: "/var/run/secrets/kubernetes.io/accesscontrol"
        - name: "host-volume"
          mountPath: "/component"
        - mountPath: /workdir
          name: workdir
      volumes:
      # volume carrying the Google Cloud Platform authorization key data
      - name: "gcp-service-admin-account"
        secret:
          secretName: "gcp-service-admin-key"
      # volume from the node
      - name: "host-volume"
        hostPath:
          path: /mnt/stateful_partition/component
          type: DirectoryOrCreate
      - hostPath:
          path: /mnt/stateful_partition/component/workdir
          type: DirectoryOrCreate
        name: workdir    
      # secrets to pull images from authenticated registries (two targets are supported)
      imagePullSecrets:
      - name: regsecret
      - name: gcr-regsecret

